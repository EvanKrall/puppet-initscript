#!/bin/bash
<% require 'shellwords' %>
#
#       /etc/rc.d/init.d/<%= @name %>
#
#       <%= @description %>
#
# chkconfig:   2345 95 95
# description: <% @description %>.
# processname: <%= @command[0].shellescape %>
# pidfile: /var/run/<%= @name.shellescape %>/pidfile

# Source function library.
. /etc/init.d/functions

PID_FILE=/var/run/<%= @name.shellescape %>/pidfile

<% if @source_default_file %>[ -e <%= @real_default_file_path.shellescape %> ] && . <%= @real_default_file_path.shellescape %><% end %>

#
# Create the /var/run/<%= @name.shellescape %> directory, which can live on a tmpfs
# filesystem and be destroyed between reboots.
#
mkrundir() {
        [ ! -d /var/run/<%= @name.shellescape %> ] && mkdir -p /var/run/<%= @name.shellescape %>
<% unless @user.nil? -%>
        chown <%= @user.shellescape %> /var/run/<%= @name.shellescape %>
<% end -%>
}

#
# Create a PID file if it doesn't already exist, for clean upgrades
# from previous init-script controlled daemons.
#
COMMAND_NAME=<%= @command[0].shellescape %>
KILLPROC_OPT=(-p "${PID_FILE}")
mkpidfile() {
        # Create PID file if it didn't exist
        mkrundir
        [ ! -f "$PID_FILE" ] && pidofproc "$COMMAND_NAME" > "$PID_FILE"
<% unless @user.nil? -%>
        chown <%= @user.shellescape %> /var/run/<%= @name.shellescape %>
<% end -%>
        if [ $? -ne 0 ] ; then
            rm "$PID_FILE"
            KILLPROC_OPT=()
        fi
}

start() {
        echo -n "Starting "<%= @name.shellescape %>": "
        mkrundir
        [ -f "$PID_FILE" ] && rm "$PID_FILE"
        daemon <% unless user.nil? %>--user=<%= @user.shellescape %><% end %> \
            --pidfile="$PID_FILE" \
            <%= @command.shelljoin %> &
        retcode=$?
        touch /var/lock/subsys/<%= @name.shellescape %>
        return "$retcode"
}

stop() {
        echo -n "Stopping "<%= @name.shellescape %>": "
        mkpidfile
        killproc "${KILLPROC_OPT[@]}" "$COMMAND_NAME" -9

        retcode=$?
        rm -f /var/lock/subsys/<%= @name.shellescape %> "$PID_FILE"
        return "$retcode"
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p "$PID_FILE" "$COMMAND_NAME"
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc "${KILLPROC_OPT[@]}" "$COMMAND_NAME" -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/<%= @name.shellescape %> ] && restart || :
        ;;
    *)
        echo "Usage: "<%= @name.shellescape %>" {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $?
